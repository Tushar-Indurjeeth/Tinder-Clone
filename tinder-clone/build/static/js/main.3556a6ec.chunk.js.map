{"version":3,"sources":["Header.js","SwipeButtons.js","TinderCards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","SwipeButtons","TinderCards","useState","people","setPeople","useEffect","a","axios","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAOe,SAASA,IACpB,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG3C,qBACIA,UAAU,eACVG,IAAI,2EACJC,IAAI,KAGR,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,+FCZvC,SAASK,IACpB,OACI,sBAAKL,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAGzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,e,+ECxBvB,SAASI,IAAe,IAAD,EACNC,mBAAS,IADH,mBAC3BC,EAD2B,KACnBC,EADmB,KAGlCC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBC,IAAMC,IAAI,8DADhC,OACUC,EADV,OAEIL,EAAUK,EAAIC,MAFlB,4CADY,uBAAC,WAAD,wBAMZC,KACD,IAEHC,QAAQC,IAAIV,GAUZ,OACI,qBAAKR,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SACKQ,EAAOW,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACIpB,UAAU,QAEVqB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAhBFC,EAgBuBJ,EAAOK,UAfrDR,QAAQC,IAAR,mBAAwBM,IADb,IAAYA,GAiBPE,iBAAkB,kBAblBD,EAamCL,EAAOK,UAZ1DR,QAAQC,IAAR,UAAeO,EAAf,qBADe,IAACA,GAQJ,SAOI,qBACIE,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAOS,OAAhB,MACxB7B,UAAU,OAFd,SAII,6BAAKoB,EAAOK,UATXL,EAAOK,aClBrBK,MAVf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCES+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3556a6ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n                <PersonIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n\r\n            <img\r\n                className=\"header__logo\"\r\n                src=\"https://1000logos.net/wp-content/uploads/2018/07/Tinder-logo-768x432.jpg\"\r\n                alt=\"\"\r\n            />\r\n\r\n            <IconButton>\r\n                <ForumIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './SwipeButtons.css';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default function SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__lightning\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './TinderCards.css';\r\nimport axios from 'axios';\r\n\r\nexport default function TinderCards() {\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req = await axios.get(\"https://tinder-clone-backend-12.herokuapp.com/tinder/cards\");\r\n            setPeople(req.data);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(people);\r\n\r\n    const swiped = (direction, nameToDelete) => {\r\n        console.log(`removing ${nameToDelete}`);\r\n    };\r\n\r\n    const outOfFrame = (name) => {\r\n        console.log(`${name} left the screen`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards__cardContainer\">\r\n                {people.map((person) => (\r\n                    <TinderCard\r\n                        className=\"swipe\"\r\n                        key={person.name}\r\n                        preventSwipe={[\"up\", \"down\"]}\r\n                        onSwipe={(dir) => swiped(dir, person.name)}\r\n                        onCardLeftScreen={() => outOfFrame(person.name)}\r\n                    >\r\n                        <div\r\n                            style={{ backgroundImage: `url(${person.imgUrl})` }}\r\n                            className=\"card\"\r\n                        >\r\n                            <h3>{person.name}</h3>\r\n\r\n                        </div>\r\n\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Header from './Header';\nimport SwipeButtons from './SwipeButtons';\nimport TinderCards from './TinderCards';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}